[device "pump"]
vendor = openaps.vendors.medtronic
extra = pump.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[device "curl"]
fields = 
cmd = bash
vendor = openaps.vendors.process
args = -c "curl -s https://stst1d.azurewebsites.net/api/v1/entries.json | json -e 'this.glucose = this.sgv'"

[report "monitor/pumphistory.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/ns-glucose.json"]
device = curl
remainder = 
use = shell
json_default = True
reporter = JSON

[alias]
new_data = report invoke last_four_pump_hours.json last_10_glucose.json
pump-status = report invoke monitor/status.json monitor/clock.json monitor/reservoir.json monitor/battery.json monitor/clock-zoned.json
upload-status = report invoke monitor/upload-status.json
status-upload = ! bash -c "openaps upload-status && ns-upload stst1d.azurewebsites.net ABCDEFGHIJKLMN devicestatus.json monitor/upload-status.json"
ns-treatments = report invoke nightscout/recent-treatments.json nightscout/uploaded.json
ns-treatment-upload = ! bash -c "openaps use ns shell format-recent-history-treatments monitor/pumphistory-zoned.json settings/model.json && openaps use ns shell upload-non-empty-treatments nightscout/recent-treatments.json"
monitor = ! bash -c "openaps pump-status && openaps status-upload"
invoke = report invoke
preflight = ! bash -c "rm -f monitor/clock.json && openaps report invoke monitor/clock.json >/dev/null 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || ( mm-stick warmup || sudo oref0-reset-usb; echo PREFLIGHT FAIL; sleep 120; exit 1 )"
monitor-cgm = report invoke monitor/ns-glucose.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/clock-zoned.json monitor/iob.json
get-settings = report invoke settings/model.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/settings.json settings/profile.json
get-bg = ! bash -c "openaps monitor-cgm 2>/dev/null || ( openaps get-ns-glucose && grep -q glucose monitor/ns-glucose.json && mv monitor/ns-glucose.json monitor/glucose.json )"
gather = ! bash -c "rm -f monitor/* enact/* settings/*; ( openaps get-bg && openaps get-settings >/dev/null && openaps monitor-pump ) 2>/dev/null"
wait-for-bg = ! bash -c "cp monitor/glucose.json monitor/last-glucose.json; while(diff -q monitor/last-glucose.json monitor/glucose.json); do echo -n .; sleep 10; openaps get-bg >/dev/null; done"
suggest = report invoke enact/suggested.json
enact = ! bash -c "openaps use pump set_temp_basal enact/suggested.json"
loop = ! bash -c "openaps monitor-cgm 2>&1 && echo CGM && openaps preflight && echo PREFLIGHT && openaps gather && echo GATHER && openaps suggest && echo SUGGEST && openaps enact && echo ENACT && openaps pump-status && echo PUMP && openaps status-upload && echo UPLOAD || echo FAILED"

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "settings/carb_ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

[report "settings/selected_basal_profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[device "ns-status"]
fields = clock iob suggested enacted battery reservoir status
cmd = ns-status
vendor = openaps.vendors.process
args = 

[report "monitor/upload-status.json"]
suggested = enact/suggested.json
status = monitor/status.json
use = shell
reservoir = monitor/reservoir.json
reporter = JSON
battery = monitor/battery.json
clock = monitor/clock-zoned.json
json_default = True
device = ns-status
remainder = 
iob = monitor/iob.json
enacted = enact/enacted.json

[report "monitor/status.json"]
device = pump
use = read_status
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = 

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "settings/model.json"]
device = pump
use = model
reporter = JSON

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = 

[report "settings/bg_targets.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = pump
use = read_insulin_sensitivities
reporter = JSON

[report "settings/basal_profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
preferences = preferences.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
device = get-profile
remainder = 
insulin_sensitivities = settings/insulin_sensitivities.json

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock.json
reporter = JSON
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = 

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = 
iob = monitor/iob.json
glucose = monitor/ns-glucose.json

[device "ns"]
vendor = openaps.vendors.process
extra = ns.ini

[report "nightscout/recent-treatments.json"]
oper = format-recent-history-treatments
use = shell
reporter = JSON
json_default = True
device = ns
remainder = monitor/pumphistory-zoned.json settings/model.json

[report "nightscout/uploaded.json"]
oper = upload-non-empty-treatments
use = shell
reporter = JSON
json_default = True
device = ns
remainder = nightscout/recent-treatments.json

[report "nightscout/recent-missing-entries.json"]
oper = format-recent-type
use = shell
reporter = JSON
device = ns
remainder = tz entries monitor/glucose.json
json_default = True

[report "nightscout/uploaded-entries.json"]
oper = upload-non-empty-type
use = shell
reporter = JSON
device = ns
remainder = entries.json nightscout/recent-missing-entries.json
json_default = True

[report "nightscout/preflight.json"]
oper = preflight
use = shell
reporter = JSON
device = ns
remainder = 
json_default = True

