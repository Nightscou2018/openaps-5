[device "pump"]
vendor = openaps.vendors.medtronic
extra = pump.ini

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[device "curl"]
fields = 
cmd = bash
vendor = openaps.vendors.process
args = -c "curl -s https://stst1d.azurewebsites.net/api/v1/entries.json | json -e 'this.glucose = this.sgv'"

[report "glucose.json"]
device = curl
use = shell
reporter = text

[report "last_four_pump_hours.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "last_10_glucose.json"]
device = curl
remainder = 
use = shell
json_default = True
reporter = JSON

[alias]
new_data = report invoke last_four_pump_hours.json last_10_glucose.json
pump-status = report invoke monitor/status.json monitor/clock.json monitor/reservoir.json monitor/battery.json monitor/clock-zoned.json
upload-status = report invoke upload-status.json
status-upload = ! bash -c "openaps upload-status && ns-upload stst1d.azurewebsites.net ABCDEFGHIJKLMN devicestatus.json upload-status.json"
monitor = ! bash -c "openaps pump-status && openaps status-upload"

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/history_data.json"]
device = pump
use = read_history_data
page = 4
reporter = JSON

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "settings/carb_ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

[report "settings/selected_basal_profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[device "ns-status"]
fields = clock iob suggested enacted battery reservoir status
cmd = ns-status
vendor = openaps.vendors.process
args = 

[report "monitor/upload-status.json"]
suggested = enact/suggested.json
status = monitor/status.json
use = shell
reservoir = monitor/reservoir.json
reporter = JSON
battery = monitor/battery.json
clock = monitor/clock-zoned.json
json_default = True
device = ns-status
remainder = 
iob = monitor/iob.json
enacted = enact/enacted.json

[report "monitor/status.json"]
device = pump
use = read_status
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = clock.json
device = tz
timezone = 

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

